(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Require Import Crate.

Class t_HasParameter Self := {
  f_size:Self -> int32 ;
}.

Class t_HasChainMetadata Self := {
  f_slot_time:Self -> t_Timestamp_t ;
}.

Class t_HasPolicy Self := {
  f_identity_provider:Self -> int32 ;
  f_created_at:Self -> t_Timestamp_t ;
  f_valid_to:Self -> t_Timestamp_t ;
  f_next_item:Self -> nseq int8 TODO: Int.to_string length -> (t_Option_t (t_AttributeTag_t × int8) × nseq int8 TODO: Int.to_string length × Self) ;
}.

(*item error backend*)

(*item error backend*)

(*item error backend*)

(*item error backend*)

Class t_HasLogger Self := {
  f_init:Self ;
  f_log_raw:Self -> seq int8 -> (t_Result_t (unit) (t_LogError_t) × Self) ;
  f_log:Self -> S -> (t_Result_t (unit) (t_LogError_t) × Self) ;
}.

Class t_HasActions Self := {
  f_accept:Self ;
  f_simple_transfer:t_AccountAddress_t -> t_Amount_t -> Self ;
  f_send_raw:t_ContractAddress_t -> t_ReceiveName_t -> t_Amount_t -> seq int8 -> Self ;
  f_and_then:Self -> Self -> Self ;
  f_or_else:Self -> Self -> Self ;
}.

(*item error backend*)

(*item error backend*)

(*item error backend*)

(*item error backend*)

Class t_SerialCtx Self := {
  f_serial_ctx:Self -> t_SizeLength_t -> W -> (t_Result_t (unit) (_) × W) ;
}.

Class t_DeserialCtx Self := {
  f_deserial_ctx:t_SizeLength_t -> bool -> R -> (t_Result_t (Self) (t_ParseError_t) × R) ;
}.
